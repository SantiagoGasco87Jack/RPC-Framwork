import { FileDescriptorProto } from "google-protobuf/google/protobuf/descriptor_pb";
import { IdentifierTable, Namespacing, processTypes } from "./utils";

function walkNamespacing(
  namespacing: Namespacing,
  content: string,
  depth: number = 0
): string {
  let result = content;

  namespacing.children.forEach((node) => {
    if (node._type === "type") {
      result += node.content + "\n\n";
    } else {
      if (depth === 0) {
        result += "export ";
      }
      result += `namespace ${node.name} { \n`;
      result += walkNamespacing(node, content, depth + 1) + "\n\n";
      result += `}\n\n`;
    }
  });

  return result;
}

export function generateType(
  fileDescriptorProto: FileDescriptorProto,
  identifierTable: IdentifierTable
): string {
  const { imports, namespacing } = processTypes(
    fileDescriptorProto,
    identifierTable
  );
  const sourceFile = fileDescriptorProto.getName();
  if (!sourceFile) {
    return "";
  }

  return `\
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// Source: ${sourceFile}

${imports
  .map(
    ({ identifiers, path }) =>
      `import { ${identifiers.join(", ")} } from '${path}';`
  )
  .join("\n")}

${walkNamespacing(namespacing, "")}
`;
}
